<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mybatis中，映射文件中的namespace是用于绑定Dao接口的，即面向接口编程。
	当你的namespace绑定接口后，你可以不用写接口实现类，mybatis会通过该绑定自动
	帮你找到对应要执行的SQL语句 -->
<mapper namespace="org.crazyzhang.blog.mapper.PostMapper">
	
	<!-- id和命名空间用来定位SQL语句，parameterType表示参数的类型，resultMap返回类型 -->
	<select id="selectPostById" parameterType="Integer" resultType="post">
		select * from post where id=#{id}
	</select>

	<select id="findAllPost" resultType="post">
		select * from post
	</select>

	<select id="findPostWithLimit" parameterType="Integer" resultType="post">
		select id,title,SUBSTRING(content,1,#{length}) AS content,created from post ORDER BY created DESC
	</select>

	<insert id="insertPost" parameterType="post">
		INSERT INTO post(title,content,created) VALUES (#{title},#{content},#{created})
	</insert>

	<select id="orderByDate" resultType="customDate">
		SELECT DATE_FORMAT(created,'%Y') AS YEAR,DATE_FORMAT(created,'%m') AS MONTH FROM post GROUP BY DATE_FORMAT(created,'%Y-%m') ORDER BY created DESC
	</select>

	<select id="findNextPage" parameterType="Integer"  resultType="java.lang.Integer">
		SELECT id FROM post WHERE id = (SELECT MAX(id) FROM post WHERE id &lt;  #{id} );
	</select>

	<select id="findPreviousPage" parameterType="Integer"  resultType="java.lang.Integer">
		SELECT id FROM post WHERE id = (SELECT MIN(id) FROM post WHERE id &gt;  #{id} );
	</select>

	<update id="updatePost" parameterType="post">
		UPDATE post SET title=#{title},content=#{content},created=#{created} WHERE id=#{id}
	</update>

	<select id="showPostByDate" parameterType="twoDate" resultType="Post">
		SELECT id,title,SUBSTRING(content,1,200) AS content,created FROM post WHERE created BETWEEN #{firstDate} AND #{nextDate} ORDER BY created DESC
	</select>

</mapper>